name: Build and Deploy to EC2

# 워크플로우가 언제 실행될 것인지 조건 명시
on:
  push:
    branches: [ "deploy" ]
  pull_request:
    branches: [ "deploy" ]

# AWS 관련 값 변수로 설정
env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: cicd-deploy-buc
  #AWS_CODE_DEPLOY_APPLICATION: GitGet-Application-CD
  #AWS_CODE_DEPLOY_GROUP: GitGet-Deployment-Group

jobs:
  deploy:
    #runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Set up JDK 17   	# JDK 17 설치
        #uses: actions/setup-java@v2
        with:
          java-version: '17'

# 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build and Test
        run: ./gradlew build test

# 빌드 파일을 zip 형식으로 압축
      - name: Make zip file
        #run: zip -r ./$GITHUB_SHA.zip
        shell: bash

# AWS 권한
      - name: AWS credential 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY }}

# S3 버킷에 build 파일(zip)을 업로드
      - name: Upload to S3
        #run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$AWS_S3_BUCKET/$GITHUB_SHA.zip

# S3에 저장된 zip 파일을 받아서 EC2 인스턴스에 배포 시작
      - name: EC2에 배포
        run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=$AWS_S3_BUCKET,key=$GITHUB_SHA.zip,bundleType=zip
